.bg-white.rounded-lg.border.border-gray-200.p-6.mb-6{:id => "task_#{task.id}", class: ("task-card-new" if defined?(new_task_id) && new_task_id == task.id)}
  .flex.items-start.justify-between
    .flex-1
      .flex.items-center.gap-3
        .flex-shrink-0
          - if task.status == "completed"
            .h-5.w-5.rounded-full.bg-green-100.flex.items-center.justify-center
              %svg.h-3.w-3.text-green-600{:fill => "currentColor", :viewbox => "0 0 20 20", :xmlns => "http://www.w3.org/2000/svg"}
                %path{"clip-rule" => "evenodd", :d => "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", "fill-rule" => "evenodd"}
          - else
            .h-5.w-5.rounded-full.border-2.border-gray-200
        .flex.items-center.gap-2
          %h3.text-lg.font-semibold.text-purple-600= task.title
          - case task.status
          - when "in_progress"
            %span.px-2.text-xs.font-medium.rounded-full.bg-amber-50.text-amber-700.border.border-amber-100{:class => "py-0.5"}
              In Progress
          - when "completed"
            %span.px-2.text-xs.font-medium.rounded-full.bg-green-50.text-green-700.border.border-green-100{:class => "py-0.5"}
              Completed
          - when "todo"
            %span.px-2.text-xs.font-medium.rounded-full.bg-gray-50.text-gray-700.border.border-gray-100{:class => "py-0.5"}
              Todo
    .flex.items-center.gap-2
      - if task.assigned_to.present?
        .flex.-space-x-1
          .h-6.w-6.rounded-full.bg-gray-100.border-2.border-white.flex.items-center.justify-center
            %span.text-xs.font-medium.text-gray-600= task.assigned_to.email[0].upcase
      = link_to edit_task_path(task),                                                                                 |
        class: "p-2 text-gray-400 hover:text-purple-600 hover:bg-purple-50 rounded-full transition-all duration-150", |
        data: { turbo_frame: "_top" } do                                                                              |
        %svg.h-5.w-5{:fill => "currentColor", :viewbox => "0 0 20 20", :xmlns => "http://www.w3.org/2000/svg"}
          %path{:d => "M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"}
      = button_to task_path(task),                                                                              |
        method: :delete,                                                                                        |
        class: "p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-full transition-all duration-150", |
        form: { data: { turbo_confirm: 'Are you sure?' } } do                                                   |
        %svg.h-5.w-5{:fill => "currentColor", :viewbox => "0 0 20 20", :xmlns => "http://www.w3.org/2000/svg"}
          %path{"clip-rule" => "evenodd", :d => "M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z", "fill-rule" => "evenodd"}
  .flex.items-center.justify-between.mt-4
    %p.text-sm.text-gray-500.mt-2.text-justify
      =task.description
  .flex.items-center.justify-between.mt-4
    .flex.items-center.gap-6
      .text-sm.text-gray-500
        - if task.due_date.present?
          %span.font-medium Due:
          = task.due_date.strftime("%b %d, %Y")
        - else
          %span.text-gray-400 No due date
  .mt-6.border-t.border-gray-200.pt-4{"data-controller" => "comment-form"}
    .flex.items-center.mb-4
      %button.inline-flex.items-center.gap-2.text-sm.text-gray-500.hover:text-purple-600.transition-colors.duration-150{"data-action" => "click->comment-form#toggle", "data-comment-form-target" => "toggleButton", :type => "button"}
        .flex.items-center{:class => "gap-1.5"}
          %svg.h-5.w-5{:fill => "currentColor", :viewBox => "0 0 24 24", :xmlns => "http://www.w3.org/2000/svg"}
            %path{:d => "M20 17.17V5a2 2 0 00-2-2H6a2 2 0 00-2 2v14l4-4h10a2 2 0 002-2z"}
          %span.font-medium
            Comments
            = turbo_stream_from "task_#{task.id}_comment_count"
            %span.ml-1.text-sm.text-gray-500{:id => "task_#{task.id}_comment_count"}
              = render "tasks/comment_count", task: task
        %svg.h-5.w-5.transition-transform.duration-200{"data-comment-form-target" => "toggleIcon", :fill => "currentColor", :viewbox => "0 0 20 20", :xmlns => "http://www.w3.org/2000/svg"}
          %path{"clip-rule" => "evenodd", :d => "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z", "fill-rule" => "evenodd"}
    = turbo_stream_from "task_#{task.id}_comments"        
    .hidden{"data-comment-form-target" => "list", id: "task_comments"}
      .space-y-4.mb-4{:id => "task_#{task.id}_comments"}
        - task.comments.each do |comment|
          = render "comments/comment", comment: comment
      .mt-4{:id => "task_#{task.id}_comment_form"}
        = form_with(model: [task, Comment.new], local: false, class: "space-y-4", data: { comment_form_target: "form", action: "turbo:submit-end->comment-form#resetForm" }) do |f|
          .flex.items-start.space-x-3
            .flex-shrink-0
              .h-8.w-8.rounded-full.bg-purple-100.flex.items-center.justify-center
                %span.text-sm.font-medium.text-purple-600= current_user.email[0].upcase rescue "U"
            .flex-1
              = f.text_area :content,                                                                                                                                                                                                                        |
                placeholder: "Write a comment...",                                                                                                                                                                                                           |
                class: "w-full rounded-lg border-0 bg-white py-2 px-3 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 sm:text-sm shadow-sm transition duration-150 ease-in-out", |
                rows: 2                                                                                                                                                                                                                                      |
            .mt-2.flex.justify-end.space-x-3
              %button.px-4.py-2.text-sm.font-medium.text-gray-700.bg-white.border.border-gray-300.rounded-md.hover:bg-gray-50.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-purple-500.transition.duration-150.ease-in-out{"data-action" => "click->comment-form#toggle", :type => "button"}
                Cancel
              = f.submit "Comment",                                                                                                                                                                                                    |
                class: "px-4 py-2 text-sm font-medium text-white bg-purple-600 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 shadow-sm transition duration-150 ease-in-out" |
