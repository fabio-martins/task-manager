.bg-white.shadow.sm:rounded-lg{:id => "task_#{task.id}"}
  .px-4.py-5.sm:p-6
    .flex.items-center.justify-between
      %h3.text-base.font-semibold.leading-6.text-gray-900
        = task.title
      %span{:class => "inline-flex items-center rounded-md bg-#{task.status_color}-50 px-2 py-1 text-xs font-medium text-#{task.status_color}-700 ring-1 ring-inset ring-#{task.status_color}-600/20"}
        = task.status.humanize
    .mt-2.max-w-xl.text-sm.text-gray-500
      %p= task.description
    .mt-3.text-sm
      %span.text-gray-500 Due:
      %time.font-medium.text-gray-900{:datetime => "#{task.due_date.iso8601}"}
        = task.due_date.strftime("%B %d, %Y")
      %span.mx-2.text-gray-500 •
      %span.text-gray-500 Assigned to:
      %span.font-medium.text-gray-900= task.assignee&.email || "Unassigned"
    .mt-4.flex.items-center.gap-3
      = link_to edit_task_path(task), class: "text-sm font-medium text-purple-600 hover:text-purple-500" do
        Edit task
      %span.text-gray-500 •
      = button_to task_path(task),                                                         |
        method: :delete,                                                                   |
        class: "text-sm font-medium text-red-600 hover:text-red-500",                      |
        form: { data: { turbo_confirm: "Are you sure you want to delete this task?" } } do |
        Delete task
  = render "tasks/comments", task: task
